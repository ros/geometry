#!/usr/bin/env python
PACKAGE = "tf"

from dynamic_reconfigure.parameter_generator_catkin import *
from math import pi

CHANGE_NOTHING = 0
CHANGE_XYZ = 1 << 0
CHANGE_RPY_RAD = 1 << 1
CHANGE_RPY_DEG = 1 << 2
CHANGE_QUAT = 1 << 3
CHANGE_ALL = 0xffffffff

gen = ParameterGenerator()

gen.add("x", double_t, CHANGE_XYZ, "Translation along X-axis", 0.0)
gen.add("y", double_t, CHANGE_XYZ, "Translation along Y-axis", 0.0)
gen.add("z", double_t, CHANGE_XYZ, "Translation along Z-axis", 0.0)

gen.add("yaw_rad", double_t, CHANGE_RPY_RAD, "Rotation around Z-axis", 0.0, -pi, pi)
gen.add("pitch_rad", double_t, CHANGE_RPY_RAD, "Rotation around Y-axis", 0.0, -pi, pi)
gen.add("roll_rad", double_t, CHANGE_RPY_RAD, "Rotation around X-axis", 0.0, -pi, pi)

gen.add("yaw_deg", double_t, CHANGE_RPY_DEG, "Rotation around Z-axis", 0.0, -180.0, 180.0)
gen.add("pitch_deg", double_t, CHANGE_RPY_DEG, "Rotation around Y-axis", 0.0, -180.0, 180.0)
gen.add("roll_deg", double_t, CHANGE_RPY_DEG, "Rotation around X-axis", 0.0, -180.0, 180.0)

gen.add("use_quaternion", bool_t, CHANGE_QUAT, "Commit quaternion", False)
gen.add("qw", double_t, CHANGE_NOTHING, "Quaternion W", 1.0, -1.0, 1.0)
gen.add("qx", double_t, CHANGE_NOTHING, "Quaternion X", 0.0, -1.0, 1.0)
gen.add("qy", double_t, CHANGE_NOTHING, "Quaternion Y", 0.0, -1.0, 1.0)
gen.add("qz", double_t, CHANGE_NOTHING, "Quaternion Z", 0.0, -1.0, 1.0)

exit(gen.generate(PACKAGE, "static_transform_publisher", "TransformSender"))